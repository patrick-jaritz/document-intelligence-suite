events {
    worker_connections 1024;
}

http {
    upstream paddleocr {
        server paddleocr:5001;
    }
    
    upstream dots_ocr {
        server dots-ocr:5002;
    }
    
    upstream crawl4ai {
        server crawl4ai:5003;
    }

    server {
        listen 80;
        
        # PaddleOCR service
        location /paddleocr/ {
            proxy_pass http://paddleocr/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # dots.ocr service
        location /dots-ocr/ {
            proxy_pass http://dots_ocr/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Crawl4AI service
        location /crawl4ai/ {
            proxy_pass http://crawl4ai/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health check endpoint
        location /health {
            return 200 '{"status": "healthy", "services": ["paddleocr", "dots-ocr", "crawl4ai"]}';
            add_header Content-Type application/json;
        }
    }
}